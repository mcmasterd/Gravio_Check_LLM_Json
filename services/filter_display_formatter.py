#!/usr/bin/env python3
"""
Filter Display Formatter
Utility ƒë·ªÉ format filter_spec v·ªõi icons cho d·ªÖ ƒë·ªçc
"""

from typing import Dict, Any

class FilterDisplayFormatter:
    """Formatter ƒë·ªÉ th√™m icons v√†o filter_spec display"""
    
    @staticmethod
    def format_filter_spec(filter_spec) -> Dict[str, Any]:
        """
        Format filter_spec v·ªõi icons cho 3 ph·∫ßn ch√≠nh:
        - user_intent_filters
        - applied_query_filters  
        - result_statistics
        
        Args:
            filter_spec: FilterSpec object
            
        Returns:
            Dict v·ªõi formatted keys
        """
        if not filter_spec:
            return {}
            
        # Convert to dict n·∫øu l√† object
        if hasattr(filter_spec, 'to_dict'):
            spec_dict = filter_spec.to_dict()
        else:
            spec_dict = filter_spec
            
        # Create formatted version v·ªõi icons
        formatted_spec = {}
        
        # Copy t·∫•t c·∫£ fields g·ªëc tr∆∞·ªõc
        for key, value in spec_dict.items():
            if key == 'user_intent_filters':
                formatted_spec['üéØ user_intent_filters'] = value
            elif key == 'applied_query_filters':
                formatted_spec['‚öôÔ∏è applied_query_filters'] = value
            elif key == 'result_statistics':
                formatted_spec['üìä result_statistics'] = value
            else:
                # Gi·ªØ nguy√™n c√°c fields kh√°c
                formatted_spec[key] = value
        
        return formatted_spec
    
    @staticmethod
    def format_filter_spec_safe(filter_spec) -> Dict[str, Any]:
        """
        Safe version - n·∫øu c√≥ l·ªói th√¨ return original
        """
        try:
            return FilterDisplayFormatter.format_filter_spec(filter_spec)
        except Exception as e:
            # N·∫øu c√≥ l·ªói, return original ƒë·ªÉ kh√¥ng break system
            if hasattr(filter_spec, 'to_dict'):
                return filter_spec.to_dict()
            return filter_spec or {}
